## Create the C 'type' of each protocol entry
<%!
    from bdec.field import Field
    from bdec.sequence import Sequence
%>

<%def name="ctype(entry)">
  %if isinstance(entry, Field):
    %if entry.format is Field.INTEGER:
int
    %else:
char*
    %endif
  %else:
${entry.name}*
  %endif
</%def>

<%def name="define(entry)" >
  %if isinstance(entry, Sequence):
    %for child in entry.children:
      %if not isinstance(child, Field):
${define(child)}
      %endif
    %endfor

typedef struct 
{
  %for child in entry.children:
    ${ctype(child)} ${child.name};
  %endfor
} ${entry.name};
  %else:
typdef ${ctype(entry)} ${child.name};
  %endif
</%def>
