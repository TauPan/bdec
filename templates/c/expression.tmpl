## vim:set syntax=mako:
<%!
    from bdec.spec.expression import Delayed, ValueResult, LengthResult
    import operator
%>

<%def name="get_op(op)">
    %if op is operator.__div__:
/
    %elif op is operator.__mul__:
*
    %elif op is operator.__sub__:
-
    %elif op is operator.__add__:
+
    %else:
#error Unknown operator type!
    %endif
</%def>

<%def name="recursive_expr(length)">
  %if isinstance(length, int):
${length}
  %elif isinstance(length, ValueResult):
${length.entries[0].name |variable}
  %elif isinstance(length, LengthResult):
${length.entries[0].name + ' length' |variable}
  %elif isinstance(length, Delayed):
(${recursive_expr(length.left)} ${get_op(length.op)} ${recursive_expr(length.right)}) 
  %else:
  #error Unknown length item ${length} 
  %endif
</%def>

<%def name="length(expression)">
${recursive_expr(expression)}
</%def>
