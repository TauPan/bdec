#!/usr/bin/env python

import logging
import sys

import bdec
import bdec.data as dt
import bdec.spec.xmlspec as xmlspec
import bdec.output.xmlout as xmlout

spec = None
binary = None
verbose = False
log = False
for arg in sys.argv[1:]:
    if arg == '--verbose':
        verbose = True
    elif arg == "-l":
        log = True
    elif spec is None:
        spec = arg
    elif binary is None:
        binary = file(arg, 'rb').read()
    else:
        sys.exit('Too many arguments!')

if log:
    logging.basicConfig(level=logging.INFO)

if spec is None:
    sys.exit('Specification not set!')
try:
    decoder, lookup = xmlspec.load(spec)
except bdec.spec.LoadError, ex:
    sys.exit(str(ex))

if binary is None:
    binary = sys.stdin.read()
data = dt.Data(binary)
try:
    xmlout.to_file(decoder, data, sys.stdout, verbose=verbose)
except bdec.DecodeError, ex:
    (filename, line_number, column_number) = lookup[ex.entry]
    sys.exit("%s[%i]: %s" % (filename, line_number, str(ex)))

undecoded = str(data)
if len(undecoded) > 0:
    sys.stderr.write('%i bytes undecoded!\n' % len(undecoded))
