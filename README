----
bdec
----

'bdec', a library to decode and encode binary files given an xml specification.


Overview
========

Binary formats typically aren't easily specified; they are rarely specified
in a high level marked language such as ASN.1 (and such specifications
cannot be retro-fitted to existing binary formats). 'bdec' is an attempt
to specify arbitrary binary formats in a markup language, and create decoders
automatically for that binary format given the high level specification.

Bdec is able to;

 * Decode binary files directly from the specification.
 * Generate C decoders from the specification.
 * Provide rudimentary encoding support.

The bdec xml specification uses constructs based on the constructs found in
ASN.1.


Usage
=====

Command line
------------

The bdec library includes command line 'decode' and 'encode' applications.
These tools will decode and encode binary data to and from an xml
representation.

For example; the `xml representation of a FAT bootsector`_ generated by
running::

  dd if=/dev/sda1 bs=512 count=1 | decode bootsector.xml

.. _xml representation of a FAT bootsector: doc/files/fatbootsector.xml


Compiler
--------

*still very rough around the edges*

The 'compile' tool is capable of generating a C lanaguage decoder based on a
specification (similar functionality to the way most ASN.1 compilers work). The
generated code has no external dependencies, and includes a sample 'main.c' for
decoding binary files.


Python module
-------------

The library contains the routines to work on the raw constructs as defined
in the xml specification. It includes functionality for decoding the
binary data directly to python instances (as opposed to xml).



Features
========

* It is easy to quickly write (and read) a specification
* No need to write a custom decoder (all error conditions are handled 
  internally; decoding either passes or fails).
* The command line application allows visual inspection of problematic
  files.
* Unicode aware, little-endian / big-endian aware
* Specify fields down to the bit (eg: single bit flags)
* Generate a C language decoder from the specification


Similar projects
================

Some other projects that perform 'generic' binary decoding include;

* Hachoir (http://hachoir.org/) - Very powerful decoding
  library, where binary formats are specified in python
  code (using generators). Quite high level decoding, with
  complex binary files being decoded. Lots of file formats
  are specified (at least partially).
* Construct (http://construct.wikispaces.com/) - Decodes data 
  structures, formats are specified in python code without too
  much high-level intelligence. Not many formats available.


Download
========

The bdec library is available under the revised BSD license (no advertising).

* `Version 0.3.0`_
  3 April 2008

  Changes:
    Core;

    * Detect invalid integer encodings in a specification
    * Nosetests can now find all unit tests
    * Expressions are resolved after the spec as loaded (allows resolving into
      common items not yet specified).
    * Referenced items can no longer use 'end-sequenceof'
    
    Format specifications;

    * Add a basic asf specification (wma/wmv)
    * Add boolean type (pdf)
    * Limit possible comment characters (pdf)
    * Add test data files for pdf, mp3, jpeg, and vfat


* `Version 0.2.0`_
  17 September 2007

  Changes:
    Core;

    * Add a 'file' tool that attempts to identify the format of a binary file.
    * Support efficient decoding of files (the whole file is no longer read into
      memory).

    Format specifications;

    * More complete pdf protocl specification.
    * Fixes to 'mp3' and 'vfat' specifications.

* `Version 0.1.1`_
  8 August 2007

  Changes:
    Initial standalone release of bdec library. Allows complex specifications
    to be written that can be automatically decoded. The included example 
    specifications include;

     * pdf documents
     * mp3 and jpg media files
     * fat12/fat16/fat32 filesystems

    Encoding is supported only for very basic specifications (no use of 
    expressions).


.. _Version 0.1.1: files/bdec-0.1.1.tar.gz
.. _Version 0.2.0: files/bdec-0.2.0.tar.gz
.. _Version 0.3.0: files/bdec-0.3.0.tar.gz

