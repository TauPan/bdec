<protocol>
    <sequence name="ber">
        <reference name="entry" />
    </sequence>

    <common>
        <choice name="entry">
            <reference name="integer" />
            <reference name="numeric string" />
            <reference name="printable string" />
            <reference name="unknown primitive" />
            <reference name="unknown constructed" type="unknown indefinite constructed" />
            <reference name="unknown constructed" type="unknown definite constructed" />
        </choice>

        <sequence name="unknown primitive">
            <sequence name="type">
                <reference name="class" />
                <field name="primitive:" length="1" value="0x0" />
                <reference name="tag number" />
            </sequence>
            <reference name="length:" type="definite length:" />
            <field name="data" type="hex" length="${length:} * 8" />
        </sequence>

        <sequence name="unknown definite constructed">
            <sequence name="type">
                <reference name="class" />
                <field name="constructed:" length="1" value="0x1" />
                <reference name="tag number" />
            </sequence>
            <reference name="length:" type="definite length:" />
            <sequenceof name="entries" length="${length:} * 8">
                <reference name="entry" />
            </sequenceof>
        </sequence>

        <sequence name="unknown indefinite constructed">
            <sequence name="type">
                <reference name="class" />
                <field name="constructed:" length="1" value="0x1" />
                <reference name="tag number" />
            </sequence>
            <field name="length:" length="8" value="0x80" />
            <sequenceof name="entries">
                <choice name="entry">
                    <field length="16" value="0x0"><end-sequenceof /></field>
                    <reference name="entry" />
                </choice>
            </sequenceof>
        </sequence>

        <!-- Define some built-in primitive asn.1 types. -->
        <sequence name="integer" value="${value:}">
            <field name="tag:" length="8" value="0x2" />
            <reference name="length:" type="definite length:" />
            <field name="value:" length="${length:} * 8" type="integer" />
        </sequence>

        <sequence name="printable string">
            <field name="tag:" length="8" value="0x13" />
            <reference name="length:" type="definite length:" />
            <field name="text" length="${length:} * 8" type="text" />
        </sequence>

        <sequence name="numeric string">
            <field name="tag:" length="8" value="0x12" />
            <reference name="length:" type="definite length:" />
            <!-- We'll just treat a numeric string as a normal printable string for now... -->
            <field name="text" length="${length:} * 8" type="text" />
        </sequence>

        <!-- FIXME: Correctly decode large tag numbers (see 8.1.2.4.3 in X.690-0207.pdf) -->
        <field name="tag number" length="5" type="integer" />

        <choice name="class">
            <field name="universal" length="2" value="0x0" />
            <field name="application" length="2" value="0x1" />
            <field name="context-specific" length="2" value="0x2" />
            <field name="private" length="2" value="0x3" />
        </choice>

        <choice name="definite length:">
            <sequence name="single byte:" value="${length:}">
                <field length="1" value="0x0" />
                <field name="length:" type="integer" length="7" />
            </sequence>
            <sequence name="multi byte:" value="${length:}">
                <field length="1" value="0x1" />
                <field name="length length:" length="7" type="integer" />
                <field name="length:" type="integer" length="${length length:} * 8" />
            </sequence>
        </choice>
    </common>
</protocol>
